#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrudIzibidu.Bruxo.data.data_classe
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="bruxo_crud")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbrand(brand instance);
    partial void Updatebrand(brand instance);
    partial void Deletebrand(brand instance);
    partial void Insertunit(unit instance);
    partial void Updateunit(unit instance);
    partial void Deleteunit(unit instance);
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void Insertcity(city instance);
    partial void Updatecity(city instance);
    partial void Deletecity(city instance);
    partial void Insertstate_supplier(state_supplier instance);
    partial void Updatestate_supplier(state_supplier instance);
    partial void Deletestate_supplier(state_supplier instance);
    partial void Inserttype_contact(type_contact instance);
    partial void Updatetype_contact(type_contact instance);
    partial void Deletetype_contact(type_contact instance);
    partial void Insertcontact(contact instance);
    partial void Updatecontact(contact instance);
    partial void Deletecontact(contact instance);
    partial void Insertsupplier(supplier instance);
    partial void Updatesupplier(supplier instance);
    partial void Deletesupplier(supplier instance);
    partial void Insertproduto(produto instance);
    partial void Updateproduto(produto instance);
    partial void Deleteproduto(produto instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::CrudIzibidu.Bruxo.Properties.Settings.Default.bruxo_crudConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<brand> brand
		{
			get
			{
				return this.GetTable<brand>();
			}
		}
		
		public System.Data.Linq.Table<unit> unit
		{
			get
			{
				return this.GetTable<unit>();
			}
		}
		
		public System.Data.Linq.Table<category> category
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<city> city
		{
			get
			{
				return this.GetTable<city>();
			}
		}
		
		public System.Data.Linq.Table<state_supplier> state_supplier
		{
			get
			{
				return this.GetTable<state_supplier>();
			}
		}
		
		public System.Data.Linq.Table<type_contact> type_contact
		{
			get
			{
				return this.GetTable<type_contact>();
			}
		}
		
		public System.Data.Linq.Table<contact> contact
		{
			get
			{
				return this.GetTable<contact>();
			}
		}
		
		public System.Data.Linq.Table<supplier> supplier
		{
			get
			{
				return this.GetTable<supplier>();
			}
		}
		
		public System.Data.Linq.Table<produto> produto
		{
			get
			{
				return this.GetTable<produto>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.brand")]
	public partial class brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name_brand;
		
		private char _desativado;
		
		private EntitySet<produto> _produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onname_brandChanging(string value);
    partial void Onname_brandChanged();
    partial void OndesativadoChanging(char value);
    partial void OndesativadoChanged();
    #endregion
		
		public brand()
		{
			this._produto = new EntitySet<produto>(new Action<produto>(this.attach_produto), new Action<produto>(this.detach_produto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_brand", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name_brand
		{
			get
			{
				return this._name_brand;
			}
			set
			{
				if ((this._name_brand != value))
				{
					this.Onname_brandChanging(value);
					this.SendPropertyChanging();
					this._name_brand = value;
					this.SendPropertyChanged("name_brand");
					this.Onname_brandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desativado", DbType="NChar(1) NOT NULL")]
		public char desativado
		{
			get
			{
				return this._desativado;
			}
			set
			{
				if ((this._desativado != value))
				{
					this.OndesativadoChanging(value);
					this.SendPropertyChanging();
					this._desativado = value;
					this.SendPropertyChanged("desativado");
					this.OndesativadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="brand_produto", Storage="_produto", ThisKey="id", OtherKey="id_brand")]
		public EntitySet<produto> produto
		{
			get
			{
				return this._produto;
			}
			set
			{
				this._produto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_produto(produto entity)
		{
			this.SendPropertyChanging();
			entity.brand = this;
		}
		
		private void detach_produto(produto entity)
		{
			this.SendPropertyChanging();
			entity.brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.unit")]
	public partial class unit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name_unit;
		
		private System.Nullable<char> _desativado;
		
		private EntitySet<produto> _produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onname_unitChanging(string value);
    partial void Onname_unitChanged();
    partial void OndesativadoChanging(System.Nullable<char> value);
    partial void OndesativadoChanged();
    #endregion
		
		public unit()
		{
			this._produto = new EntitySet<produto>(new Action<produto>(this.attach_produto), new Action<produto>(this.detach_produto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_unit", DbType="NChar(50)")]
		public string name_unit
		{
			get
			{
				return this._name_unit;
			}
			set
			{
				if ((this._name_unit != value))
				{
					this.Onname_unitChanging(value);
					this.SendPropertyChanging();
					this._name_unit = value;
					this.SendPropertyChanged("name_unit");
					this.Onname_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desativado", DbType="NChar(1)")]
		public System.Nullable<char> desativado
		{
			get
			{
				return this._desativado;
			}
			set
			{
				if ((this._desativado != value))
				{
					this.OndesativadoChanging(value);
					this.SendPropertyChanging();
					this._desativado = value;
					this.SendPropertyChanged("desativado");
					this.OndesativadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unit_produto", Storage="_produto", ThisKey="id", OtherKey="id_unit")]
		public EntitySet<produto> produto
		{
			get
			{
				return this._produto;
			}
			set
			{
				this._produto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_produto(produto entity)
		{
			this.SendPropertyChanging();
			entity.unit = this;
		}
		
		private void detach_produto(produto entity)
		{
			this.SendPropertyChanging();
			entity.unit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name_categoria;
		
		private char _desativado;
		
		private EntitySet<produto> _produto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onname_categoriaChanging(string value);
    partial void Onname_categoriaChanged();
    partial void OndesativadoChanging(char value);
    partial void OndesativadoChanged();
    #endregion
		
		public category()
		{
			this._produto = new EntitySet<produto>(new Action<produto>(this.attach_produto), new Action<produto>(this.detach_produto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_categoria", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name_categoria
		{
			get
			{
				return this._name_categoria;
			}
			set
			{
				if ((this._name_categoria != value))
				{
					this.Onname_categoriaChanging(value);
					this.SendPropertyChanging();
					this._name_categoria = value;
					this.SendPropertyChanged("name_categoria");
					this.Onname_categoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desativado", DbType="NChar(1) NOT NULL")]
		public char desativado
		{
			get
			{
				return this._desativado;
			}
			set
			{
				if ((this._desativado != value))
				{
					this.OndesativadoChanging(value);
					this.SendPropertyChanging();
					this._desativado = value;
					this.SendPropertyChanged("desativado");
					this.OndesativadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_produto", Storage="_produto", ThisKey="id", OtherKey="id_category")]
		public EntitySet<produto> produto
		{
			get
			{
				return this._produto;
			}
			set
			{
				this._produto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_produto(produto entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_produto(produto entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.city")]
	public partial class city : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _city_name;
		
		private System.Nullable<int> _state_id;
		
		private EntitySet<supplier> _supplier;
		
		private EntityRef<state_supplier> _state_supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncity_nameChanging(string value);
    partial void Oncity_nameChanged();
    partial void Onstate_idChanging(System.Nullable<int> value);
    partial void Onstate_idChanged();
    #endregion
		
		public city()
		{
			this._supplier = new EntitySet<supplier>(new Action<supplier>(this.attach_supplier), new Action<supplier>(this.detach_supplier));
			this._state_supplier = default(EntityRef<state_supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string city_name
		{
			get
			{
				return this._city_name;
			}
			set
			{
				if ((this._city_name != value))
				{
					this.Oncity_nameChanging(value);
					this.SendPropertyChanging();
					this._city_name = value;
					this.SendPropertyChanged("city_name");
					this.Oncity_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_id", DbType="Int")]
		public System.Nullable<int> state_id
		{
			get
			{
				return this._state_id;
			}
			set
			{
				if ((this._state_id != value))
				{
					if (this._state_supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstate_idChanging(value);
					this.SendPropertyChanging();
					this._state_id = value;
					this.SendPropertyChanged("state_id");
					this.Onstate_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_supplier", Storage="_supplier", ThisKey="id", OtherKey="city_id")]
		public EntitySet<supplier> supplier
		{
			get
			{
				return this._supplier;
			}
			set
			{
				this._supplier.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="state_supplier_city", Storage="_state_supplier", ThisKey="state_id", OtherKey="id", IsForeignKey=true)]
		public state_supplier state_supplier
		{
			get
			{
				return this._state_supplier.Entity;
			}
			set
			{
				state_supplier previousValue = this._state_supplier.Entity;
				if (((previousValue != value) 
							|| (this._state_supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._state_supplier.Entity = null;
						previousValue.city.Remove(this);
					}
					this._state_supplier.Entity = value;
					if ((value != null))
					{
						value.city.Add(this);
						this._state_id = value.id;
					}
					else
					{
						this._state_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("state_supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_supplier(supplier entity)
		{
			this.SendPropertyChanging();
			entity.city = this;
		}
		
		private void detach_supplier(supplier entity)
		{
			this.SendPropertyChanging();
			entity.city = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.state_supplier")]
	public partial class state_supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _state_name;
		
		private EntitySet<city> _city;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstate_nameChanging(string value);
    partial void Onstate_nameChanged();
    #endregion
		
		public state_supplier()
		{
			this._city = new EntitySet<city>(new Action<city>(this.attach_city), new Action<city>(this.detach_city));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string state_name
		{
			get
			{
				return this._state_name;
			}
			set
			{
				if ((this._state_name != value))
				{
					this.Onstate_nameChanging(value);
					this.SendPropertyChanging();
					this._state_name = value;
					this.SendPropertyChanged("state_name");
					this.Onstate_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="state_supplier_city", Storage="_city", ThisKey="id", OtherKey="state_id")]
		public EntitySet<city> city
		{
			get
			{
				return this._city;
			}
			set
			{
				this._city.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_city(city entity)
		{
			this.SendPropertyChanging();
			entity.state_supplier = this;
		}
		
		private void detach_city(city entity)
		{
			this.SendPropertyChanging();
			entity.state_supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.type_contact")]
	public partial class type_contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name_type_contact;
		
		private EntitySet<contact> _contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onname_type_contactChanging(string value);
    partial void Onname_type_contactChanged();
    #endregion
		
		public type_contact()
		{
			this._contact = new EntitySet<contact>(new Action<contact>(this.attach_contact), new Action<contact>(this.detach_contact));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_type_contact", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name_type_contact
		{
			get
			{
				return this._name_type_contact;
			}
			set
			{
				if ((this._name_type_contact != value))
				{
					this.Onname_type_contactChanging(value);
					this.SendPropertyChanging();
					this._name_type_contact = value;
					this.SendPropertyChanged("name_type_contact");
					this.Onname_type_contactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_contact_contact", Storage="_contact", ThisKey="id", OtherKey="type_contact_id")]
		public EntitySet<contact> contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				this._contact.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contact(contact entity)
		{
			this.SendPropertyChanging();
			entity.type_contact = this;
		}
		
		private void detach_contact(contact entity)
		{
			this.SendPropertyChanging();
			entity.type_contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contact")]
	public partial class contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _supplier_id;
		
		private string _name_contact;
		
		private string _observation;
		
		private int _type_contact_id;
		
		private EntityRef<type_contact> _type_contact;
		
		private EntityRef<supplier> _supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsupplier_idChanging(int value);
    partial void Onsupplier_idChanged();
    partial void Onname_contactChanging(string value);
    partial void Onname_contactChanged();
    partial void OnobservationChanging(string value);
    partial void OnobservationChanged();
    partial void Ontype_contact_idChanging(int value);
    partial void Ontype_contact_idChanged();
    #endregion
		
		public contact()
		{
			this._type_contact = default(EntityRef<type_contact>);
			this._supplier = default(EntityRef<supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier_id", DbType="Int NOT NULL")]
		public int supplier_id
		{
			get
			{
				return this._supplier_id;
			}
			set
			{
				if ((this._supplier_id != value))
				{
					if (this._supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupplier_idChanging(value);
					this.SendPropertyChanging();
					this._supplier_id = value;
					this.SendPropertyChanged("supplier_id");
					this.Onsupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_contact", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name_contact
		{
			get
			{
				return this._name_contact;
			}
			set
			{
				if ((this._name_contact != value))
				{
					this.Onname_contactChanging(value);
					this.SendPropertyChanging();
					this._name_contact = value;
					this.SendPropertyChanged("name_contact");
					this.Onname_contactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_observation", DbType="NVarChar(50)")]
		public string observation
		{
			get
			{
				return this._observation;
			}
			set
			{
				if ((this._observation != value))
				{
					this.OnobservationChanging(value);
					this.SendPropertyChanging();
					this._observation = value;
					this.SendPropertyChanged("observation");
					this.OnobservationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_contact_id", DbType="Int NOT NULL")]
		public int type_contact_id
		{
			get
			{
				return this._type_contact_id;
			}
			set
			{
				if ((this._type_contact_id != value))
				{
					if (this._type_contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontype_contact_idChanging(value);
					this.SendPropertyChanging();
					this._type_contact_id = value;
					this.SendPropertyChanged("type_contact_id");
					this.Ontype_contact_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_contact_contact", Storage="_type_contact", ThisKey="type_contact_id", OtherKey="id", IsForeignKey=true)]
		public type_contact type_contact
		{
			get
			{
				return this._type_contact.Entity;
			}
			set
			{
				type_contact previousValue = this._type_contact.Entity;
				if (((previousValue != value) 
							|| (this._type_contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._type_contact.Entity = null;
						previousValue.contact.Remove(this);
					}
					this._type_contact.Entity = value;
					if ((value != null))
					{
						value.contact.Add(this);
						this._type_contact_id = value.id;
					}
					else
					{
						this._type_contact_id = default(int);
					}
					this.SendPropertyChanged("type_contact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_contact", Storage="_supplier", ThisKey="supplier_id", OtherKey="id", IsForeignKey=true)]
		public supplier supplier
		{
			get
			{
				return this._supplier.Entity;
			}
			set
			{
				supplier previousValue = this._supplier.Entity;
				if (((previousValue != value) 
							|| (this._supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplier.Entity = null;
						previousValue.contact.Remove(this);
					}
					this._supplier.Entity = value;
					if ((value != null))
					{
						value.contact.Add(this);
						this._supplier_id = value.id;
					}
					else
					{
						this._supplier_id = default(int);
					}
					this.SendPropertyChanged("supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.supplier")]
	public partial class supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _register_data;
		
		private int _city_id;
		
		private string _name_supplier;
		
		private string _cpf;
		
		private string _ie;
		
		private string _surname;
		
		private string _cep;
		
		private string _adress;
		
		private string _adress_number;
		
		private string _adress_district;
		
		private string _adress_complement;
		
		private char _activated;
		
		private char _custumer;
		
		private string _obs;
		
		private EntitySet<contact> _contact;
		
		private EntitySet<produto> _produto;
		
		private EntityRef<city> _city;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onregister_dataChanging(System.DateTime value);
    partial void Onregister_dataChanged();
    partial void Oncity_idChanging(int value);
    partial void Oncity_idChanged();
    partial void Onname_supplierChanging(string value);
    partial void Onname_supplierChanged();
    partial void OncpfChanging(string value);
    partial void OncpfChanged();
    partial void OnieChanging(string value);
    partial void OnieChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OncepChanging(string value);
    partial void OncepChanged();
    partial void OnadressChanging(string value);
    partial void OnadressChanged();
    partial void Onadress_numberChanging(string value);
    partial void Onadress_numberChanged();
    partial void Onadress_districtChanging(string value);
    partial void Onadress_districtChanged();
    partial void Onadress_complementChanging(string value);
    partial void Onadress_complementChanged();
    partial void OnactivatedChanging(char value);
    partial void OnactivatedChanged();
    partial void OncustumerChanging(char value);
    partial void OncustumerChanged();
    partial void OnobsChanging(string value);
    partial void OnobsChanged();
    #endregion
		
		public supplier()
		{
			this._contact = new EntitySet<contact>(new Action<contact>(this.attach_contact), new Action<contact>(this.detach_contact));
			this._produto = new EntitySet<produto>(new Action<produto>(this.attach_produto), new Action<produto>(this.detach_produto));
			this._city = default(EntityRef<city>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_register_data", DbType="Date NOT NULL")]
		public System.DateTime register_data
		{
			get
			{
				return this._register_data;
			}
			set
			{
				if ((this._register_data != value))
				{
					this.Onregister_dataChanging(value);
					this.SendPropertyChanging();
					this._register_data = value;
					this.SendPropertyChanged("register_data");
					this.Onregister_dataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", DbType="Int NOT NULL")]
		public int city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					if (this._city.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_supplier", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name_supplier
		{
			get
			{
				return this._name_supplier;
			}
			set
			{
				if ((this._name_supplier != value))
				{
					this.Onname_supplierChanging(value);
					this.SendPropertyChanging();
					this._name_supplier = value;
					this.SendPropertyChanged("name_supplier");
					this.Onname_supplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpf", DbType="NVarChar(50)")]
		public string cpf
		{
			get
			{
				return this._cpf;
			}
			set
			{
				if ((this._cpf != value))
				{
					this.OncpfChanging(value);
					this.SendPropertyChanging();
					this._cpf = value;
					this.SendPropertyChanged("cpf");
					this.OncpfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ie", DbType="NVarChar(50)")]
		public string ie
		{
			get
			{
				return this._ie;
			}
			set
			{
				if ((this._ie != value))
				{
					this.OnieChanging(value);
					this.SendPropertyChanging();
					this._ie = value;
					this.SendPropertyChanged("ie");
					this.OnieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="NVarChar(50)")]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cep", DbType="NVarChar(50)")]
		public string cep
		{
			get
			{
				return this._cep;
			}
			set
			{
				if ((this._cep != value))
				{
					this.OncepChanging(value);
					this.SendPropertyChanging();
					this._cep = value;
					this.SendPropertyChanged("cep");
					this.OncepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress", DbType="NVarChar(50)")]
		public string adress
		{
			get
			{
				return this._adress;
			}
			set
			{
				if ((this._adress != value))
				{
					this.OnadressChanging(value);
					this.SendPropertyChanging();
					this._adress = value;
					this.SendPropertyChanged("adress");
					this.OnadressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress_number", DbType="NVarChar(10)")]
		public string adress_number
		{
			get
			{
				return this._adress_number;
			}
			set
			{
				if ((this._adress_number != value))
				{
					this.Onadress_numberChanging(value);
					this.SendPropertyChanging();
					this._adress_number = value;
					this.SendPropertyChanged("adress_number");
					this.Onadress_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress_district", DbType="NVarChar(50)")]
		public string adress_district
		{
			get
			{
				return this._adress_district;
			}
			set
			{
				if ((this._adress_district != value))
				{
					this.Onadress_districtChanging(value);
					this.SendPropertyChanging();
					this._adress_district = value;
					this.SendPropertyChanged("adress_district");
					this.Onadress_districtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress_complement", DbType="NVarChar(50)")]
		public string adress_complement
		{
			get
			{
				return this._adress_complement;
			}
			set
			{
				if ((this._adress_complement != value))
				{
					this.Onadress_complementChanging(value);
					this.SendPropertyChanging();
					this._adress_complement = value;
					this.SendPropertyChanged("adress_complement");
					this.Onadress_complementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activated", DbType="NChar(1) NOT NULL")]
		public char activated
		{
			get
			{
				return this._activated;
			}
			set
			{
				if ((this._activated != value))
				{
					this.OnactivatedChanging(value);
					this.SendPropertyChanging();
					this._activated = value;
					this.SendPropertyChanged("activated");
					this.OnactivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_custumer", DbType="NChar(1) NOT NULL")]
		public char custumer
		{
			get
			{
				return this._custumer;
			}
			set
			{
				if ((this._custumer != value))
				{
					this.OncustumerChanging(value);
					this.SendPropertyChanging();
					this._custumer = value;
					this.SendPropertyChanged("custumer");
					this.OncustumerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_obs", DbType="NVarChar(4000)")]
		public string obs
		{
			get
			{
				return this._obs;
			}
			set
			{
				if ((this._obs != value))
				{
					this.OnobsChanging(value);
					this.SendPropertyChanging();
					this._obs = value;
					this.SendPropertyChanged("obs");
					this.OnobsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_contact", Storage="_contact", ThisKey="id", OtherKey="supplier_id")]
		public EntitySet<contact> contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				this._contact.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_produto", Storage="_produto", ThisKey="id", OtherKey="id_supplier")]
		public EntitySet<produto> produto
		{
			get
			{
				return this._produto;
			}
			set
			{
				this._produto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_supplier", Storage="_city", ThisKey="city_id", OtherKey="id", IsForeignKey=true)]
		public city city
		{
			get
			{
				return this._city.Entity;
			}
			set
			{
				city previousValue = this._city.Entity;
				if (((previousValue != value) 
							|| (this._city.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._city.Entity = null;
						previousValue.supplier.Remove(this);
					}
					this._city.Entity = value;
					if ((value != null))
					{
						value.supplier.Add(this);
						this._city_id = value.id;
					}
					else
					{
						this._city_id = default(int);
					}
					this.SendPropertyChanged("city");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contact(contact entity)
		{
			this.SendPropertyChanging();
			entity.supplier = this;
		}
		
		private void detach_contact(contact entity)
		{
			this.SendPropertyChanging();
			entity.supplier = null;
		}
		
		private void attach_produto(produto entity)
		{
			this.SendPropertyChanging();
			entity.supplier = this;
		}
		
		private void detach_produto(produto entity)
		{
			this.SendPropertyChanging();
			entity.supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.produto")]
	public partial class produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome_produto;
		
		private string _codigo_barras;
		
		private System.Nullable<int> _estoque_produto;
		
		private System.Nullable<decimal> _preco_custo_produto;
		
		private decimal _preco_venda_produto;
		
		private System.Nullable<int> _id_supplier;
		
		private System.Nullable<int> _id_brand;
		
		private int _id_unit;
		
		private int _id_category;
		
		private System.DateTime _data_registro;
		
		private char _ativado;
		
		private EntityRef<brand> _brand;
		
		private EntityRef<category> _category;
		
		private EntityRef<supplier> _supplier;
		
		private EntityRef<unit> _unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onnome_produtoChanging(string value);
    partial void Onnome_produtoChanged();
    partial void Oncodigo_barrasChanging(string value);
    partial void Oncodigo_barrasChanged();
    partial void Onestoque_produtoChanging(System.Nullable<int> value);
    partial void Onestoque_produtoChanged();
    partial void Onpreco_custo_produtoChanging(System.Nullable<decimal> value);
    partial void Onpreco_custo_produtoChanged();
    partial void Onpreco_venda_produtoChanging(decimal value);
    partial void Onpreco_venda_produtoChanged();
    partial void Onid_supplierChanging(System.Nullable<int> value);
    partial void Onid_supplierChanged();
    partial void Onid_brandChanging(System.Nullable<int> value);
    partial void Onid_brandChanged();
    partial void Onid_unitChanging(int value);
    partial void Onid_unitChanged();
    partial void Onid_categoryChanging(int value);
    partial void Onid_categoryChanged();
    partial void Ondata_registroChanging(System.DateTime value);
    partial void Ondata_registroChanged();
    partial void OnativadoChanging(char value);
    partial void OnativadoChanged();
    #endregion
		
		public produto()
		{
			this._brand = default(EntityRef<brand>);
			this._category = default(EntityRef<category>);
			this._supplier = default(EntityRef<supplier>);
			this._unit = default(EntityRef<unit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome_produto", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nome_produto
		{
			get
			{
				return this._nome_produto;
			}
			set
			{
				if ((this._nome_produto != value))
				{
					this.Onnome_produtoChanging(value);
					this.SendPropertyChanging();
					this._nome_produto = value;
					this.SendPropertyChanged("nome_produto");
					this.Onnome_produtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigo_barras", DbType="NVarChar(50)")]
		public string codigo_barras
		{
			get
			{
				return this._codigo_barras;
			}
			set
			{
				if ((this._codigo_barras != value))
				{
					this.Oncodigo_barrasChanging(value);
					this.SendPropertyChanging();
					this._codigo_barras = value;
					this.SendPropertyChanged("codigo_barras");
					this.Oncodigo_barrasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estoque_produto", DbType="Int")]
		public System.Nullable<int> estoque_produto
		{
			get
			{
				return this._estoque_produto;
			}
			set
			{
				if ((this._estoque_produto != value))
				{
					this.Onestoque_produtoChanging(value);
					this.SendPropertyChanging();
					this._estoque_produto = value;
					this.SendPropertyChanged("estoque_produto");
					this.Onestoque_produtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preco_custo_produto", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> preco_custo_produto
		{
			get
			{
				return this._preco_custo_produto;
			}
			set
			{
				if ((this._preco_custo_produto != value))
				{
					this.Onpreco_custo_produtoChanging(value);
					this.SendPropertyChanging();
					this._preco_custo_produto = value;
					this.SendPropertyChanged("preco_custo_produto");
					this.Onpreco_custo_produtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_preco_venda_produto", DbType="Decimal(10,2) NOT NULL")]
		public decimal preco_venda_produto
		{
			get
			{
				return this._preco_venda_produto;
			}
			set
			{
				if ((this._preco_venda_produto != value))
				{
					this.Onpreco_venda_produtoChanging(value);
					this.SendPropertyChanging();
					this._preco_venda_produto = value;
					this.SendPropertyChanged("preco_venda_produto");
					this.Onpreco_venda_produtoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_supplier", DbType="Int")]
		public System.Nullable<int> id_supplier
		{
			get
			{
				return this._id_supplier;
			}
			set
			{
				if ((this._id_supplier != value))
				{
					if (this._supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_supplierChanging(value);
					this.SendPropertyChanging();
					this._id_supplier = value;
					this.SendPropertyChanged("id_supplier");
					this.Onid_supplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_brand", DbType="Int")]
		public System.Nullable<int> id_brand
		{
			get
			{
				return this._id_brand;
			}
			set
			{
				if ((this._id_brand != value))
				{
					if (this._brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_brandChanging(value);
					this.SendPropertyChanging();
					this._id_brand = value;
					this.SendPropertyChanged("id_brand");
					this.Onid_brandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unit", DbType="Int NOT NULL")]
		public int id_unit
		{
			get
			{
				return this._id_unit;
			}
			set
			{
				if ((this._id_unit != value))
				{
					if (this._unit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_unitChanging(value);
					this.SendPropertyChanging();
					this._id_unit = value;
					this.SendPropertyChanged("id_unit");
					this.Onid_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_category", DbType="Int NOT NULL")]
		public int id_category
		{
			get
			{
				return this._id_category;
			}
			set
			{
				if ((this._id_category != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_categoryChanging(value);
					this.SendPropertyChanging();
					this._id_category = value;
					this.SendPropertyChanged("id_category");
					this.Onid_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_registro", DbType="Date NOT NULL")]
		public System.DateTime data_registro
		{
			get
			{
				return this._data_registro;
			}
			set
			{
				if ((this._data_registro != value))
				{
					this.Ondata_registroChanging(value);
					this.SendPropertyChanging();
					this._data_registro = value;
					this.SendPropertyChanged("data_registro");
					this.Ondata_registroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ativado", DbType="NChar(1) NOT NULL")]
		public char ativado
		{
			get
			{
				return this._ativado;
			}
			set
			{
				if ((this._ativado != value))
				{
					this.OnativadoChanging(value);
					this.SendPropertyChanging();
					this._ativado = value;
					this.SendPropertyChanged("ativado");
					this.OnativadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="brand_produto", Storage="_brand", ThisKey="id_brand", OtherKey="id", IsForeignKey=true)]
		public brand brand
		{
			get
			{
				return this._brand.Entity;
			}
			set
			{
				brand previousValue = this._brand.Entity;
				if (((previousValue != value) 
							|| (this._brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._brand.Entity = null;
						previousValue.produto.Remove(this);
					}
					this._brand.Entity = value;
					if ((value != null))
					{
						value.produto.Add(this);
						this._id_brand = value.id;
					}
					else
					{
						this._id_brand = default(Nullable<int>);
					}
					this.SendPropertyChanged("brand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_produto", Storage="_category", ThisKey="id_category", OtherKey="id", IsForeignKey=true)]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.produto.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.produto.Add(this);
						this._id_category = value.id;
					}
					else
					{
						this._id_category = default(int);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_produto", Storage="_supplier", ThisKey="id_supplier", OtherKey="id", IsForeignKey=true)]
		public supplier supplier
		{
			get
			{
				return this._supplier.Entity;
			}
			set
			{
				supplier previousValue = this._supplier.Entity;
				if (((previousValue != value) 
							|| (this._supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplier.Entity = null;
						previousValue.produto.Remove(this);
					}
					this._supplier.Entity = value;
					if ((value != null))
					{
						value.produto.Add(this);
						this._id_supplier = value.id;
					}
					else
					{
						this._id_supplier = default(Nullable<int>);
					}
					this.SendPropertyChanged("supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unit_produto", Storage="_unit", ThisKey="id_unit", OtherKey="id", IsForeignKey=true)]
		public unit unit
		{
			get
			{
				return this._unit.Entity;
			}
			set
			{
				unit previousValue = this._unit.Entity;
				if (((previousValue != value) 
							|| (this._unit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unit.Entity = null;
						previousValue.produto.Remove(this);
					}
					this._unit.Entity = value;
					if ((value != null))
					{
						value.produto.Add(this);
						this._id_unit = value.id;
					}
					else
					{
						this._id_unit = default(int);
					}
					this.SendPropertyChanged("unit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
